{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","fetch","then","response","json","users","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,GCHE,I,YDGK,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aEHbC,G,MAAW,SAACR,GAGzB,OAFIS,QAAQC,IAAIV,GAET,qBAAKC,UAAU,YAAf,SAEKD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPlBQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAErC,OAAQ,uBACAC,SAAUD,EACVE,KAAK,SACLhB,UAAU,SACVa,YAAaA,MCsCVI,E,kDAvCb,aAAe,IAAD,8BACZ,gBAUFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SATrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAeJ,IAAD,EAC2BI,KAAKD,MAA/BH,EADD,EACCA,YACFK,EAFC,EACcf,SACagB,QAChC,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASR,EAAYO,kBAE7D,OACE,sBAAK3B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEa,YAAY,kBACZC,aAAcU,KAAKV,eAErB,cAAC,EAAD,CAAUJ,SAAUe,S,0CAKL,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKd,SAAS,CAACT,SAAUuB,W,GArC1BC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e1cee9fb.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","export default __webpack_public_path__ + \"static/media/logo.2d27ead7.svg\";","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    console.log(props);\r\n\r\nreturn <div className='card-list'>\r\n        {\r\n            props.monsters.map(monster => ( \r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n</div>;\r\n}","import { React } from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n\r\n    return (<input \r\n            onChange={handleChange} \r\n            type='Search' \r\n            className='search'\r\n            placeholder={placeholder} />);\r\n};","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { Component } from 'react';\r\nimport { CardList } from './components/card-list/card-list.component';\r\nimport { SearchBox } from './components/search-box/search-box.component';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: ''\r\n    }\r\n\r\n    // this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({searchField: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    const { searchField, monsters } = this.state;\r\n    const filteredMonsters = monsters.filter( \r\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n    return (\r\n      <div className='App'>\r\n        <h1>Monsters Rolodex </h1>\r\n        <SearchBox \r\n          placeholder='Search Monsters' \r\n          handleChange={this.handleChange} />\r\n\r\n        <CardList monsters={filteredMonsters} /> \r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters: users}));\r\n  }\r\n\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}